<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jose Verdu-Diaz</title>
    <link>https://Jose-Verdu-Diaz.github.io/posts/projects/</link>
    <description>Recent content in Projects on Jose Verdu-Diaz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://Jose-Verdu-Diaz.github.io/posts/projects/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Top 50 playlist with python v1</title>
      <link>https://Jose-Verdu-Diaz.github.io/posts/projects/spotify/top50v1/</link>
      <pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Jose-Verdu-Diaz.github.io/posts/projects/spotify/top50v1/</guid>
      <description>Spotify spits dozens of playlists with recommendations every day, but because I&amp;rsquo;m a nonconformist by nature (and a bit of a nerd) I need to have some custom playlist recommendation system. In this post, I will show you how to create an automatic Top 50 songs playlist using the spotify API and Python. In addition, we will implement a Nearest Neighbour algorithm to sort the tracks by similarity and improve the song transitions in the playlist.</description>
    </item>
    
    <item>
      <title>Improving Spotify with UMAP v1</title>
      <link>https://Jose-Verdu-Diaz.github.io/posts/projects/spotify/umapv1/</link>
      <pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Jose-Verdu-Diaz.github.io/posts/projects/spotify/umapv1/</guid>
      <description>I&amp;rsquo;m the kind of Spotify user that adds every single song to one single playlist and then complains about not being able to find what he wants to hear. One simple solution would be grouping songs in different playlists by mood, however, this solution is not exciting enough for me&amp;hellip; Instead, I decided to create an app that takes all tracks in a playlist, &amp;ldquo;analyzes&amp;rdquo; and groups them by similarity in an interactive 3D graph, where you can click on a song and automatically play it on Spotify.</description>
    </item>
    
    
  </channel>
</rss>
